<!-- Os comentarios devem ter espacos no inicio e no fim, para --> 
<!-- separar dos hifens --> 
<!-- Nao devem ser usados caracteres especiais (p.ex. acentos) --> 
<!-- Todas as tags e atributos sao obrigatorios, exceto onde for --> 
<!-- referido o contrario --> 

<yaf>

    <!-- bloco de configuracoes globais --> 
    <!-- a declaracao dos atributos deste bloco e' obrigatoria --> 
    <!-- Valores para draw mode: "fill" , "line", "point" --> 
    <!-- Valores para shading: "flat", "gouraud" ) --> 
    <!-- Valores para cullface: "none", "back" , "front" ou "both" --> 
    <!-- Valores para cullorder : "CCW" ou "CW" -->
  <globals background="2.0 1.0 3.4 5.5" drawmode="fill" shading="flat" cullface="none" cullorder="CW" />

  <!-- bloco de camaras: o atributo "initial" identifica a camara/ponto de vista inicial --> 
    <cameras initial="one" > 
        <!-- tem de existir, pelo menos uma camara dos tipos seguintes (perspective ou ortho) --> 

        <perspective id="one" near="fde" far="2" angle="de4" pos="4 2 1" target="3 3 2" /> 
        <ortho id="two" near="2" far="5" left="4" right="2" top="3" bottom="4" /> 

    </cameras> 
   

    <!-- bloco de iluminacao; segue os parametros do OpenGL --> 
    <lighting doublesided="true" local="false" enabled="true" ambient="10 5 2 3" > 
             <!-- Deve existir pelo menos um dos seguintes blocos: omin ou spot --> 
            <!-- Os identificadores "id" nao podem ser repetidos --> 
            <omni id="s0" enabled="true" 
                location="10 5 2 3" 
                ambient="10 54 2 3" 
                diffuse="10 5 2 3" 
                specular="10 5 2 3" 
            /> 

            <spot id="s1" enabled="true" 
                location="10 5 2 5" 
                ambient="10 5 2 3" 
                diffuse="10 5 2 3" 
                specular="10 5 2 3"
                angle="10" 
                exponent="12" 
                direction="10 5 2" 
            /> 

    </lighting> 

    <!-- bloco de texturas. Este bloco tem de existir mas pode estar vazio, se nao forem usadas texturas --> 
    <textures>        
          <texture id="ss" file="ss" /> 
    </textures> 

    <!-- bloco de materiais; --> 
    <appearances> 
        <!-- deve existir um ou mais blocos "appearance" -->
        <!-- IMPORTANTE: -->
        <!--   textureref, texlength_s e textlength_t sao atributos -->
        <!--   opcionais se for usada uma textura. --> 
        <!--   ver topico 'Notas finais' no enunciado sobre os -->
        <!--   parametros texlength_...) -->  
        <appearance id="ss" 
            emissive="1.0 1.0 1.0 1.0"
            ambient="1.0 1.0 1.0 1.0"
            diffuse="1.0 1.0 1.0 1.0"
            specular="1.0 1.0 1.0 1.0"
            shininess="1.0"
            textureref="ss" 
            texlength_s="1.0"
            texlength_t="1.0" />
    </appearances> 

    <!-- bloco do grafo; "rootid" identifica o no de raiz --> 
    <graph rootid="ss"> 

        <!-- tem de existir, pelo menos, um bloco "node" --> 
        <node id="ss"> 
            <!-- bloco "transforms" obrigatorio --> 
            <transforms> 
                <!-- deve conter transformacoes explicitas usando as instrucoes seguintes sem limite nem ordem --> 
                <!-- ex: bloco transforms pode ficar sem conteudo --> 
                <!-- ex: bloco transforms pode ser R,T (nao tem S) --> 
                <!-- ex: bloco transforms pode ser R,S,T,S --> 
                <translate to="1.0 1.0 1.0" />
                <rotate axis="x" angle="1.0" />
                <scale factor="1.0 1.0 1.0" />
                <scale factor="1.0 2.0 1.0" />
                <rotate axis="y" angle="1.0" />
            </transforms> 
           
            <!-- declaracao da aparencia a utilizar (pode ser omitida): --> 
            <!-- a) se declarada sobrepoe-se 'a aparencia do "pai" --> 
            <!-- b) se omitida, o no' mantem (herda) a aparencia do "pai" --> 

            <appearanceref id="ss" /> 
                               
             <!-- bloco "children" obrigatorio --> 
            <children> 

                <!-- deve existir no minimo uma primitiva, ou uma referencia a outros nos --> 
                <!-- podem existir varias primitivas e/ou referencias a outros nos --> 

                <!-- Primitivas : rectangle, triangle, cylinder, sphere, torus --> 
                <!--   Comandos a serem interpretados genericamente como em OpenGL/GLUT, exceto --> 
                <!--   o cilindro, que deve adicionalmente ter topos ou tampas) -->             
                <rectangle xy1="1.0 1.0" xy2="1.0 1.0" />
                <triangle xyz1="1.0 1.0 1.0" xyz2="1.0 2.0 1.0" xyz3="1.0 1.0 2.0" />
                <cylinder base="1.0" top="1.0" height="1.0" slices="3" stacks="1" />      <!-- deve ter topos -->
                <sphere radius="1.0" slices="4" stacks="2" />
                <torus inner="1.0" outer="1.0" slices="20" loops="10" />
                
                <!-- Referencia a outros elementos do grafo --> 
                <!-- (repetir o nº de vezes necessario) --> 
                <!-- LEMBRANDO: qualquer no' pode ser referenciado previamente 'a sua declaracao; isto --> 
                <!--            é, a ordem pela qual os nós são declarados é irrelevante --> 

                <noderef id="ss" /> 

            </children> 
        </node> 
    </graph> 
</yaf>